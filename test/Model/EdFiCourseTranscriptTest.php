<?php
/**
 * EdFiCourseTranscriptTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  ***
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * EdFiCourseTranscriptTest Class Doc Comment
 *
 * @category    Class
 * @description EdFiCourseTranscript
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class EdFiCourseTranscriptTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "EdFiCourseTranscript"
     */
    public function testEdFiCourseTranscript()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "course_attempt_result_descriptor"
     */
    public function testPropertyCourseAttemptResultDescriptor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "course_reference"
     */
    public function testPropertyCourseReference()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "external_education_organization_reference"
     */
    public function testPropertyExternalEducationOrganizationReference()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "responsible_teacher_staff_reference"
     */
    public function testPropertyResponsibleTeacherStaffReference()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "student_academic_record_reference"
     */
    public function testPropertyStudentAcademicRecordReference()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "academic_subjects"
     */
    public function testPropertyAcademicSubjects()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "alternative_course_identification_codes"
     */
    public function testPropertyAlternativeCourseIdentificationCodes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "alternative_course_title"
     */
    public function testPropertyAlternativeCourseTitle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "assigning_organization_identification_code"
     */
    public function testPropertyAssigningOrganizationIdentificationCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "attempted_credit_conversion"
     */
    public function testPropertyAttemptedCreditConversion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "attempted_credits"
     */
    public function testPropertyAttemptedCredits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "attempted_credit_type_descriptor"
     */
    public function testPropertyAttemptedCreditTypeDescriptor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "course_catalog_url"
     */
    public function testPropertyCourseCatalogUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "course_programs"
     */
    public function testPropertyCoursePrograms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "course_repeat_code_descriptor"
     */
    public function testPropertyCourseRepeatCodeDescriptor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "course_title"
     */
    public function testPropertyCourseTitle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credit_categories"
     */
    public function testPropertyCreditCategories()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "earned_additional_credits"
     */
    public function testPropertyEarnedAdditionalCredits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "earned_credit_conversion"
     */
    public function testPropertyEarnedCreditConversion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "earned_credits"
     */
    public function testPropertyEarnedCredits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "earned_credit_type_descriptor"
     */
    public function testPropertyEarnedCreditTypeDescriptor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "external_education_organization_name_of_institution"
     */
    public function testPropertyExternalEducationOrganizationNameOfInstitution()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "final_letter_grade_earned"
     */
    public function testPropertyFinalLetterGradeEarned()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "final_numeric_grade_earned"
     */
    public function testPropertyFinalNumericGradeEarned()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "method_credit_earned_descriptor"
     */
    public function testPropertyMethodCreditEarnedDescriptor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "partial_course_transcript_awards"
     */
    public function testPropertyPartialCourseTranscriptAwards()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sections"
     */
    public function testPropertySections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "when_taken_grade_level_descriptor"
     */
    public function testPropertyWhenTakenGradeLevelDescriptor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_etag"
     */
    public function testPropertyEtag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_last_modified_date"
     */
    public function testPropertyLastModifiedDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
