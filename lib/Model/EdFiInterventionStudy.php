<?php
/**
 * EdFiInterventionStudy
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Resources
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  ***
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Resources\Model;

use \ArrayAccess;
use \Resources\ObjectSerializer;

/**
 * EdFiInterventionStudy Class Doc Comment
 *
 * @category Class
 * @package  Resources
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EdFiInterventionStudy implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'edFi_interventionStudy';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'intervention_study_identification_code' => 'string',
        'education_organization_reference' => '\Resources\Model\EdFiEducationOrganizationReference',
        'intervention_prescription_reference' => '\Resources\Model\EdFiInterventionPrescriptionReference',
        'appropriate_grade_levels' => '\Resources\Model\EdFiInterventionStudyAppropriateGradeLevel[]',
        'appropriate_sexes' => '\Resources\Model\EdFiInterventionStudyAppropriateSex[]',
        'delivery_method_descriptor' => 'string',
        'education_contents' => '\Resources\Model\EdFiInterventionStudyEducationContent[]',
        'intervention_class_descriptor' => 'string',
        'intervention_effectivenesses' => '\Resources\Model\EdFiInterventionStudyInterventionEffectiveness[]',
        'learning_resource_metadata_uris' => '\Resources\Model\EdFiInterventionStudyLearningResourceMetadataURI[]',
        'participants' => 'int',
        'population_serveds' => '\Resources\Model\EdFiInterventionStudyPopulationServed[]',
        'state_abbreviations' => '\Resources\Model\EdFiInterventionStudyStateAbbreviation[]',
        'uris' => '\Resources\Model\EdFiInterventionStudyURI[]',
        '_etag' => 'string',
        '_last_modified_date' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'intervention_study_identification_code' => null,
        'education_organization_reference' => null,
        'intervention_prescription_reference' => null,
        'appropriate_grade_levels' => null,
        'appropriate_sexes' => null,
        'delivery_method_descriptor' => null,
        'education_contents' => null,
        'intervention_class_descriptor' => null,
        'intervention_effectivenesses' => null,
        'learning_resource_metadata_uris' => null,
        'participants' => 'int32',
        'population_serveds' => null,
        'state_abbreviations' => null,
        'uris' => null,
        '_etag' => null,
        '_last_modified_date' => 'date-time'
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'id' => false,
        'intervention_study_identification_code' => false,
        'education_organization_reference' => false,
        'intervention_prescription_reference' => false,
        'appropriate_grade_levels' => false,
        'appropriate_sexes' => false,
        'delivery_method_descriptor' => false,
        'education_contents' => false,
        'intervention_class_descriptor' => false,
        'intervention_effectivenesses' => false,
        'learning_resource_metadata_uris' => false,
        'participants' => false,
        'population_serveds' => false,
        'state_abbreviations' => false,
        'uris' => false,
        '_etag' => false,
        '_last_modified_date' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'intervention_study_identification_code' => 'interventionStudyIdentificationCode',
        'education_organization_reference' => 'educationOrganizationReference',
        'intervention_prescription_reference' => 'interventionPrescriptionReference',
        'appropriate_grade_levels' => 'appropriateGradeLevels',
        'appropriate_sexes' => 'appropriateSexes',
        'delivery_method_descriptor' => 'deliveryMethodDescriptor',
        'education_contents' => 'educationContents',
        'intervention_class_descriptor' => 'interventionClassDescriptor',
        'intervention_effectivenesses' => 'interventionEffectivenesses',
        'learning_resource_metadata_uris' => 'learningResourceMetadataURIs',
        'participants' => 'participants',
        'population_serveds' => 'populationServeds',
        'state_abbreviations' => 'stateAbbreviations',
        'uris' => 'uris',
        '_etag' => '_etag',
        '_last_modified_date' => '_lastModifiedDate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'intervention_study_identification_code' => 'setInterventionStudyIdentificationCode',
        'education_organization_reference' => 'setEducationOrganizationReference',
        'intervention_prescription_reference' => 'setInterventionPrescriptionReference',
        'appropriate_grade_levels' => 'setAppropriateGradeLevels',
        'appropriate_sexes' => 'setAppropriateSexes',
        'delivery_method_descriptor' => 'setDeliveryMethodDescriptor',
        'education_contents' => 'setEducationContents',
        'intervention_class_descriptor' => 'setInterventionClassDescriptor',
        'intervention_effectivenesses' => 'setInterventionEffectivenesses',
        'learning_resource_metadata_uris' => 'setLearningResourceMetadataUris',
        'participants' => 'setParticipants',
        'population_serveds' => 'setPopulationServeds',
        'state_abbreviations' => 'setStateAbbreviations',
        'uris' => 'setUris',
        '_etag' => 'setEtag',
        '_last_modified_date' => 'setLastModifiedDate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'intervention_study_identification_code' => 'getInterventionStudyIdentificationCode',
        'education_organization_reference' => 'getEducationOrganizationReference',
        'intervention_prescription_reference' => 'getInterventionPrescriptionReference',
        'appropriate_grade_levels' => 'getAppropriateGradeLevels',
        'appropriate_sexes' => 'getAppropriateSexes',
        'delivery_method_descriptor' => 'getDeliveryMethodDescriptor',
        'education_contents' => 'getEducationContents',
        'intervention_class_descriptor' => 'getInterventionClassDescriptor',
        'intervention_effectivenesses' => 'getInterventionEffectivenesses',
        'learning_resource_metadata_uris' => 'getLearningResourceMetadataUris',
        'participants' => 'getParticipants',
        'population_serveds' => 'getPopulationServeds',
        'state_abbreviations' => 'getStateAbbreviations',
        'uris' => 'getUris',
        '_etag' => 'getEtag',
        '_last_modified_date' => 'getLastModifiedDate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('id', $data ?? [], null);
        $this->setIfExists('intervention_study_identification_code', $data ?? [], null);
        $this->setIfExists('education_organization_reference', $data ?? [], null);
        $this->setIfExists('intervention_prescription_reference', $data ?? [], null);
        $this->setIfExists('appropriate_grade_levels', $data ?? [], null);
        $this->setIfExists('appropriate_sexes', $data ?? [], null);
        $this->setIfExists('delivery_method_descriptor', $data ?? [], null);
        $this->setIfExists('education_contents', $data ?? [], null);
        $this->setIfExists('intervention_class_descriptor', $data ?? [], null);
        $this->setIfExists('intervention_effectivenesses', $data ?? [], null);
        $this->setIfExists('learning_resource_metadata_uris', $data ?? [], null);
        $this->setIfExists('participants', $data ?? [], null);
        $this->setIfExists('population_serveds', $data ?? [], null);
        $this->setIfExists('state_abbreviations', $data ?? [], null);
        $this->setIfExists('uris', $data ?? [], null);
        $this->setIfExists('_etag', $data ?? [], null);
        $this->setIfExists('_last_modified_date', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['intervention_study_identification_code'] === null) {
            $invalidProperties[] = "'intervention_study_identification_code' can't be null";
        }
        if ((mb_strlen($this->container['intervention_study_identification_code']) > 60)) {
            $invalidProperties[] = "invalid value for 'intervention_study_identification_code', the character length must be smaller than or equal to 60.";
        }

        if ($this->container['education_organization_reference'] === null) {
            $invalidProperties[] = "'education_organization_reference' can't be null";
        }
        if ($this->container['intervention_prescription_reference'] === null) {
            $invalidProperties[] = "'intervention_prescription_reference' can't be null";
        }
        if ($this->container['delivery_method_descriptor'] === null) {
            $invalidProperties[] = "'delivery_method_descriptor' can't be null";
        }
        if ((mb_strlen($this->container['delivery_method_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'delivery_method_descriptor', the character length must be smaller than or equal to 306.";
        }

        if ($this->container['intervention_class_descriptor'] === null) {
            $invalidProperties[] = "'intervention_class_descriptor' can't be null";
        }
        if ((mb_strlen($this->container['intervention_class_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'intervention_class_descriptor', the character length must be smaller than or equal to 306.";
        }

        if ($this->container['participants'] === null) {
            $invalidProperties[] = "'participants' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id 
     *
     * @return self
     */
    public function setId($id)
    {
        if (is_null($id)) {
            throw new \InvalidArgumentException('non-nullable id cannot be null');
        }
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets intervention_study_identification_code
     *
     * @return string
     */
    public function getInterventionStudyIdentificationCode()
    {
        return $this->container['intervention_study_identification_code'];
    }

    /**
     * Sets intervention_study_identification_code
     *
     * @param string $intervention_study_identification_code A unique number or alphanumeric code assigned to an intervention study.
     *
     * @return self
     */
    public function setInterventionStudyIdentificationCode($intervention_study_identification_code)
    {
        if (is_null($intervention_study_identification_code)) {
            throw new \InvalidArgumentException('non-nullable intervention_study_identification_code cannot be null');
        }
        if ((mb_strlen($intervention_study_identification_code) > 60)) {
            throw new \InvalidArgumentException('invalid length for $intervention_study_identification_code when calling EdFiInterventionStudy., must be smaller than or equal to 60.');
        }

        $this->container['intervention_study_identification_code'] = $intervention_study_identification_code;

        return $this;
    }

    /**
     * Gets education_organization_reference
     *
     * @return \Resources\Model\EdFiEducationOrganizationReference
     */
    public function getEducationOrganizationReference()
    {
        return $this->container['education_organization_reference'];
    }

    /**
     * Sets education_organization_reference
     *
     * @param \Resources\Model\EdFiEducationOrganizationReference $education_organization_reference education_organization_reference
     *
     * @return self
     */
    public function setEducationOrganizationReference($education_organization_reference)
    {
        if (is_null($education_organization_reference)) {
            throw new \InvalidArgumentException('non-nullable education_organization_reference cannot be null');
        }
        $this->container['education_organization_reference'] = $education_organization_reference;

        return $this;
    }

    /**
     * Gets intervention_prescription_reference
     *
     * @return \Resources\Model\EdFiInterventionPrescriptionReference
     */
    public function getInterventionPrescriptionReference()
    {
        return $this->container['intervention_prescription_reference'];
    }

    /**
     * Sets intervention_prescription_reference
     *
     * @param \Resources\Model\EdFiInterventionPrescriptionReference $intervention_prescription_reference intervention_prescription_reference
     *
     * @return self
     */
    public function setInterventionPrescriptionReference($intervention_prescription_reference)
    {
        if (is_null($intervention_prescription_reference)) {
            throw new \InvalidArgumentException('non-nullable intervention_prescription_reference cannot be null');
        }
        $this->container['intervention_prescription_reference'] = $intervention_prescription_reference;

        return $this;
    }

    /**
     * Gets appropriate_grade_levels
     *
     * @return \Resources\Model\EdFiInterventionStudyAppropriateGradeLevel[]|null
     */
    public function getAppropriateGradeLevels()
    {
        return $this->container['appropriate_grade_levels'];
    }

    /**
     * Sets appropriate_grade_levels
     *
     * @param \Resources\Model\EdFiInterventionStudyAppropriateGradeLevel[]|null $appropriate_grade_levels An unordered collection of interventionStudyAppropriateGradeLevels. Grade levels participating in this study.
     *
     * @return self
     */
    public function setAppropriateGradeLevels($appropriate_grade_levels)
    {
        if (is_null($appropriate_grade_levels)) {
            throw new \InvalidArgumentException('non-nullable appropriate_grade_levels cannot be null');
        }
        $this->container['appropriate_grade_levels'] = $appropriate_grade_levels;

        return $this;
    }

    /**
     * Gets appropriate_sexes
     *
     * @return \Resources\Model\EdFiInterventionStudyAppropriateSex[]|null
     */
    public function getAppropriateSexes()
    {
        return $this->container['appropriate_sexes'];
    }

    /**
     * Sets appropriate_sexes
     *
     * @param \Resources\Model\EdFiInterventionStudyAppropriateSex[]|null $appropriate_sexes An unordered collection of interventionStudyAppropriateSexes. Sexes participating in this study. If omitted, considered generally applicable.
     *
     * @return self
     */
    public function setAppropriateSexes($appropriate_sexes)
    {
        if (is_null($appropriate_sexes)) {
            throw new \InvalidArgumentException('non-nullable appropriate_sexes cannot be null');
        }
        $this->container['appropriate_sexes'] = $appropriate_sexes;

        return $this;
    }

    /**
     * Gets delivery_method_descriptor
     *
     * @return string
     */
    public function getDeliveryMethodDescriptor()
    {
        return $this->container['delivery_method_descriptor'];
    }

    /**
     * Sets delivery_method_descriptor
     *
     * @param string $delivery_method_descriptor The way in which an intervention was implemented: individual, small group, whole class, or whole school.
     *
     * @return self
     */
    public function setDeliveryMethodDescriptor($delivery_method_descriptor)
    {
        if (is_null($delivery_method_descriptor)) {
            throw new \InvalidArgumentException('non-nullable delivery_method_descriptor cannot be null');
        }
        if ((mb_strlen($delivery_method_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $delivery_method_descriptor when calling EdFiInterventionStudy., must be smaller than or equal to 306.');
        }

        $this->container['delivery_method_descriptor'] = $delivery_method_descriptor;

        return $this;
    }

    /**
     * Gets education_contents
     *
     * @return \Resources\Model\EdFiInterventionStudyEducationContent[]|null
     */
    public function getEducationContents()
    {
        return $this->container['education_contents'];
    }

    /**
     * Sets education_contents
     *
     * @param \Resources\Model\EdFiInterventionStudyEducationContent[]|null $education_contents An unordered collection of interventionStudyEducationContents. Relates the education content source to the education content.
     *
     * @return self
     */
    public function setEducationContents($education_contents)
    {
        if (is_null($education_contents)) {
            throw new \InvalidArgumentException('non-nullable education_contents cannot be null');
        }
        $this->container['education_contents'] = $education_contents;

        return $this;
    }

    /**
     * Gets intervention_class_descriptor
     *
     * @return string
     */
    public function getInterventionClassDescriptor()
    {
        return $this->container['intervention_class_descriptor'];
    }

    /**
     * Sets intervention_class_descriptor
     *
     * @param string $intervention_class_descriptor The way in which an intervention is used: curriculum, supplement, or practice.
     *
     * @return self
     */
    public function setInterventionClassDescriptor($intervention_class_descriptor)
    {
        if (is_null($intervention_class_descriptor)) {
            throw new \InvalidArgumentException('non-nullable intervention_class_descriptor cannot be null');
        }
        if ((mb_strlen($intervention_class_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $intervention_class_descriptor when calling EdFiInterventionStudy., must be smaller than or equal to 306.');
        }

        $this->container['intervention_class_descriptor'] = $intervention_class_descriptor;

        return $this;
    }

    /**
     * Gets intervention_effectivenesses
     *
     * @return \Resources\Model\EdFiInterventionStudyInterventionEffectiveness[]|null
     */
    public function getInterventionEffectivenesses()
    {
        return $this->container['intervention_effectivenesses'];
    }

    /**
     * Sets intervention_effectivenesses
     *
     * @param \Resources\Model\EdFiInterventionStudyInterventionEffectiveness[]|null $intervention_effectivenesses An unordered collection of interventionStudyInterventionEffectivenesses. Measurement of the effectiveness of the intervention study per diagnosis.
     *
     * @return self
     */
    public function setInterventionEffectivenesses($intervention_effectivenesses)
    {
        if (is_null($intervention_effectivenesses)) {
            throw new \InvalidArgumentException('non-nullable intervention_effectivenesses cannot be null');
        }
        $this->container['intervention_effectivenesses'] = $intervention_effectivenesses;

        return $this;
    }

    /**
     * Gets learning_resource_metadata_uris
     *
     * @return \Resources\Model\EdFiInterventionStudyLearningResourceMetadataURI[]|null
     */
    public function getLearningResourceMetadataUris()
    {
        return $this->container['learning_resource_metadata_uris'];
    }

    /**
     * Sets learning_resource_metadata_uris
     *
     * @param \Resources\Model\EdFiInterventionStudyLearningResourceMetadataURI[]|null $learning_resource_metadata_uris An unordered collection of interventionStudyLearningResourceMetadataURIs. The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.
     *
     * @return self
     */
    public function setLearningResourceMetadataUris($learning_resource_metadata_uris)
    {
        if (is_null($learning_resource_metadata_uris)) {
            throw new \InvalidArgumentException('non-nullable learning_resource_metadata_uris cannot be null');
        }
        $this->container['learning_resource_metadata_uris'] = $learning_resource_metadata_uris;

        return $this;
    }

    /**
     * Gets participants
     *
     * @return int
     */
    public function getParticipants()
    {
        return $this->container['participants'];
    }

    /**
     * Sets participants
     *
     * @param int $participants The number of participants observed in the study.
     *
     * @return self
     */
    public function setParticipants($participants)
    {
        if (is_null($participants)) {
            throw new \InvalidArgumentException('non-nullable participants cannot be null');
        }
        $this->container['participants'] = $participants;

        return $this;
    }

    /**
     * Gets population_serveds
     *
     * @return \Resources\Model\EdFiInterventionStudyPopulationServed[]|null
     */
    public function getPopulationServeds()
    {
        return $this->container['population_serveds'];
    }

    /**
     * Sets population_serveds
     *
     * @param \Resources\Model\EdFiInterventionStudyPopulationServed[]|null $population_serveds An unordered collection of interventionStudyPopulationServeds. A subset of students that are the focus of the intervention study.
     *
     * @return self
     */
    public function setPopulationServeds($population_serveds)
    {
        if (is_null($population_serveds)) {
            throw new \InvalidArgumentException('non-nullable population_serveds cannot be null');
        }
        $this->container['population_serveds'] = $population_serveds;

        return $this;
    }

    /**
     * Gets state_abbreviations
     *
     * @return \Resources\Model\EdFiInterventionStudyStateAbbreviation[]|null
     */
    public function getStateAbbreviations()
    {
        return $this->container['state_abbreviations'];
    }

    /**
     * Sets state_abbreviations
     *
     * @param \Resources\Model\EdFiInterventionStudyStateAbbreviation[]|null $state_abbreviations An unordered collection of interventionStudyStateAbbreviations. The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.
     *
     * @return self
     */
    public function setStateAbbreviations($state_abbreviations)
    {
        if (is_null($state_abbreviations)) {
            throw new \InvalidArgumentException('non-nullable state_abbreviations cannot be null');
        }
        $this->container['state_abbreviations'] = $state_abbreviations;

        return $this;
    }

    /**
     * Gets uris
     *
     * @return \Resources\Model\EdFiInterventionStudyURI[]|null
     */
    public function getUris()
    {
        return $this->container['uris'];
    }

    /**
     * Sets uris
     *
     * @param \Resources\Model\EdFiInterventionStudyURI[]|null $uris An unordered collection of interventionStudyURIs. The URI (typical a URL) pointing to an education content item.
     *
     * @return self
     */
    public function setUris($uris)
    {
        if (is_null($uris)) {
            throw new \InvalidArgumentException('non-nullable uris cannot be null');
        }
        $this->container['uris'] = $uris;

        return $this;
    }

    /**
     * Gets _etag
     *
     * @return string|null
     */
    public function getEtag()
    {
        return $this->container['_etag'];
    }

    /**
     * Sets _etag
     *
     * @param string|null $_etag A unique system-generated value that identifies the version of the resource.
     *
     * @return self
     */
    public function setEtag($_etag)
    {
        if (is_null($_etag)) {
            throw new \InvalidArgumentException('non-nullable _etag cannot be null');
        }
        $this->container['_etag'] = $_etag;

        return $this;
    }

    /**
     * Gets _last_modified_date
     *
     * @return \DateTime|null
     */
    public function getLastModifiedDate()
    {
        return $this->container['_last_modified_date'];
    }

    /**
     * Sets _last_modified_date
     *
     * @param \DateTime|null $_last_modified_date The date and time the resource was last modified.
     *
     * @return self
     */
    public function setLastModifiedDate($_last_modified_date)
    {
        if (is_null($_last_modified_date)) {
            throw new \InvalidArgumentException('non-nullable _last_modified_date cannot be null');
        }
        $this->container['_last_modified_date'] = $_last_modified_date;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


