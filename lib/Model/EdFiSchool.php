<?php
/**
 * EdFiSchool
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Resources
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  ***
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Resources\Model;

use \ArrayAccess;
use \Resources\ObjectSerializer;

/**
 * EdFiSchool Class Doc Comment
 *
 * @category Class
 * @package  Resources
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EdFiSchool implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'edFi_school';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'education_organization_categories' => '\Resources\Model\EdFiEducationOrganizationCategory[]',
        'grade_levels' => '\Resources\Model\EdFiSchoolGradeLevel[]',
        'school_id' => 'int',
        'charter_approval_school_year_type_reference' => '\Resources\Model\EdFiSchoolYearTypeReference',
        'local_education_agency_reference' => '\Resources\Model\EdFiLocalEducationAgencyReference',
        'addresses' => '\Resources\Model\EdFiEducationOrganizationAddress[]',
        'administrative_funding_control_descriptor' => 'string',
        'charter_approval_agency_type_descriptor' => 'string',
        'charter_status_descriptor' => 'string',
        'identification_codes' => '\Resources\Model\EdFiEducationOrganizationIdentificationCode[]',
        'indicators' => '\Resources\Model\EdFiEducationOrganizationIndicator[]',
        'institution_telephones' => '\Resources\Model\EdFiEducationOrganizationInstitutionTelephone[]',
        'international_addresses' => '\Resources\Model\EdFiEducationOrganizationInternationalAddress[]',
        'internet_access_descriptor' => 'string',
        'magnet_special_program_emphasis_school_descriptor' => 'string',
        'name_of_institution' => 'string',
        'operational_status_descriptor' => 'string',
        'school_categories' => '\Resources\Model\EdFiSchoolCategory[]',
        'school_type_descriptor' => 'string',
        'short_name_of_institution' => 'string',
        'title_i_part_a_school_designation_descriptor' => 'string',
        'web_site' => 'string',
        '_etag' => 'string',
        '_last_modified_date' => '\DateTime',
        '_ext' => '\Resources\Model\SchoolExtensions'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'education_organization_categories' => null,
        'grade_levels' => null,
        'school_id' => 'int64',
        'charter_approval_school_year_type_reference' => null,
        'local_education_agency_reference' => null,
        'addresses' => null,
        'administrative_funding_control_descriptor' => null,
        'charter_approval_agency_type_descriptor' => null,
        'charter_status_descriptor' => null,
        'identification_codes' => null,
        'indicators' => null,
        'institution_telephones' => null,
        'international_addresses' => null,
        'internet_access_descriptor' => null,
        'magnet_special_program_emphasis_school_descriptor' => null,
        'name_of_institution' => null,
        'operational_status_descriptor' => null,
        'school_categories' => null,
        'school_type_descriptor' => null,
        'short_name_of_institution' => null,
        'title_i_part_a_school_designation_descriptor' => null,
        'web_site' => null,
        '_etag' => null,
        '_last_modified_date' => 'date-time',
        '_ext' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'id' => false,
        'education_organization_categories' => false,
        'grade_levels' => false,
        'school_id' => false,
        'charter_approval_school_year_type_reference' => false,
        'local_education_agency_reference' => false,
        'addresses' => false,
        'administrative_funding_control_descriptor' => true,
        'charter_approval_agency_type_descriptor' => true,
        'charter_status_descriptor' => true,
        'identification_codes' => false,
        'indicators' => false,
        'institution_telephones' => false,
        'international_addresses' => false,
        'internet_access_descriptor' => true,
        'magnet_special_program_emphasis_school_descriptor' => true,
        'name_of_institution' => false,
        'operational_status_descriptor' => true,
        'school_categories' => false,
        'school_type_descriptor' => true,
        'short_name_of_institution' => true,
        'title_i_part_a_school_designation_descriptor' => true,
        'web_site' => true,
        '_etag' => false,
        '_last_modified_date' => false,
        '_ext' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'education_organization_categories' => 'educationOrganizationCategories',
        'grade_levels' => 'gradeLevels',
        'school_id' => 'schoolId',
        'charter_approval_school_year_type_reference' => 'charterApprovalSchoolYearTypeReference',
        'local_education_agency_reference' => 'localEducationAgencyReference',
        'addresses' => 'addresses',
        'administrative_funding_control_descriptor' => 'administrativeFundingControlDescriptor',
        'charter_approval_agency_type_descriptor' => 'charterApprovalAgencyTypeDescriptor',
        'charter_status_descriptor' => 'charterStatusDescriptor',
        'identification_codes' => 'identificationCodes',
        'indicators' => 'indicators',
        'institution_telephones' => 'institutionTelephones',
        'international_addresses' => 'internationalAddresses',
        'internet_access_descriptor' => 'internetAccessDescriptor',
        'magnet_special_program_emphasis_school_descriptor' => 'magnetSpecialProgramEmphasisSchoolDescriptor',
        'name_of_institution' => 'nameOfInstitution',
        'operational_status_descriptor' => 'operationalStatusDescriptor',
        'school_categories' => 'schoolCategories',
        'school_type_descriptor' => 'schoolTypeDescriptor',
        'short_name_of_institution' => 'shortNameOfInstitution',
        'title_i_part_a_school_designation_descriptor' => 'titleIPartASchoolDesignationDescriptor',
        'web_site' => 'webSite',
        '_etag' => '_etag',
        '_last_modified_date' => '_lastModifiedDate',
        '_ext' => '_ext'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'education_organization_categories' => 'setEducationOrganizationCategories',
        'grade_levels' => 'setGradeLevels',
        'school_id' => 'setSchoolId',
        'charter_approval_school_year_type_reference' => 'setCharterApprovalSchoolYearTypeReference',
        'local_education_agency_reference' => 'setLocalEducationAgencyReference',
        'addresses' => 'setAddresses',
        'administrative_funding_control_descriptor' => 'setAdministrativeFundingControlDescriptor',
        'charter_approval_agency_type_descriptor' => 'setCharterApprovalAgencyTypeDescriptor',
        'charter_status_descriptor' => 'setCharterStatusDescriptor',
        'identification_codes' => 'setIdentificationCodes',
        'indicators' => 'setIndicators',
        'institution_telephones' => 'setInstitutionTelephones',
        'international_addresses' => 'setInternationalAddresses',
        'internet_access_descriptor' => 'setInternetAccessDescriptor',
        'magnet_special_program_emphasis_school_descriptor' => 'setMagnetSpecialProgramEmphasisSchoolDescriptor',
        'name_of_institution' => 'setNameOfInstitution',
        'operational_status_descriptor' => 'setOperationalStatusDescriptor',
        'school_categories' => 'setSchoolCategories',
        'school_type_descriptor' => 'setSchoolTypeDescriptor',
        'short_name_of_institution' => 'setShortNameOfInstitution',
        'title_i_part_a_school_designation_descriptor' => 'setTitleIPartASchoolDesignationDescriptor',
        'web_site' => 'setWebSite',
        '_etag' => 'setEtag',
        '_last_modified_date' => 'setLastModifiedDate',
        '_ext' => 'setExt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'education_organization_categories' => 'getEducationOrganizationCategories',
        'grade_levels' => 'getGradeLevels',
        'school_id' => 'getSchoolId',
        'charter_approval_school_year_type_reference' => 'getCharterApprovalSchoolYearTypeReference',
        'local_education_agency_reference' => 'getLocalEducationAgencyReference',
        'addresses' => 'getAddresses',
        'administrative_funding_control_descriptor' => 'getAdministrativeFundingControlDescriptor',
        'charter_approval_agency_type_descriptor' => 'getCharterApprovalAgencyTypeDescriptor',
        'charter_status_descriptor' => 'getCharterStatusDescriptor',
        'identification_codes' => 'getIdentificationCodes',
        'indicators' => 'getIndicators',
        'institution_telephones' => 'getInstitutionTelephones',
        'international_addresses' => 'getInternationalAddresses',
        'internet_access_descriptor' => 'getInternetAccessDescriptor',
        'magnet_special_program_emphasis_school_descriptor' => 'getMagnetSpecialProgramEmphasisSchoolDescriptor',
        'name_of_institution' => 'getNameOfInstitution',
        'operational_status_descriptor' => 'getOperationalStatusDescriptor',
        'school_categories' => 'getSchoolCategories',
        'school_type_descriptor' => 'getSchoolTypeDescriptor',
        'short_name_of_institution' => 'getShortNameOfInstitution',
        'title_i_part_a_school_designation_descriptor' => 'getTitleIPartASchoolDesignationDescriptor',
        'web_site' => 'getWebSite',
        '_etag' => 'getEtag',
        '_last_modified_date' => 'getLastModifiedDate',
        '_ext' => 'getExt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('id', $data ?? [], null);
        $this->setIfExists('education_organization_categories', $data ?? [], null);
        $this->setIfExists('grade_levels', $data ?? [], null);
        $this->setIfExists('school_id', $data ?? [], null);
        $this->setIfExists('charter_approval_school_year_type_reference', $data ?? [], null);
        $this->setIfExists('local_education_agency_reference', $data ?? [], null);
        $this->setIfExists('addresses', $data ?? [], null);
        $this->setIfExists('administrative_funding_control_descriptor', $data ?? [], null);
        $this->setIfExists('charter_approval_agency_type_descriptor', $data ?? [], null);
        $this->setIfExists('charter_status_descriptor', $data ?? [], null);
        $this->setIfExists('identification_codes', $data ?? [], null);
        $this->setIfExists('indicators', $data ?? [], null);
        $this->setIfExists('institution_telephones', $data ?? [], null);
        $this->setIfExists('international_addresses', $data ?? [], null);
        $this->setIfExists('internet_access_descriptor', $data ?? [], null);
        $this->setIfExists('magnet_special_program_emphasis_school_descriptor', $data ?? [], null);
        $this->setIfExists('name_of_institution', $data ?? [], null);
        $this->setIfExists('operational_status_descriptor', $data ?? [], null);
        $this->setIfExists('school_categories', $data ?? [], null);
        $this->setIfExists('school_type_descriptor', $data ?? [], null);
        $this->setIfExists('short_name_of_institution', $data ?? [], null);
        $this->setIfExists('title_i_part_a_school_designation_descriptor', $data ?? [], null);
        $this->setIfExists('web_site', $data ?? [], null);
        $this->setIfExists('_etag', $data ?? [], null);
        $this->setIfExists('_last_modified_date', $data ?? [], null);
        $this->setIfExists('_ext', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['education_organization_categories'] === null) {
            $invalidProperties[] = "'education_organization_categories' can't be null";
        }
        if ($this->container['grade_levels'] === null) {
            $invalidProperties[] = "'grade_levels' can't be null";
        }
        if ($this->container['school_id'] === null) {
            $invalidProperties[] = "'school_id' can't be null";
        }
        if (!is_null($this->container['administrative_funding_control_descriptor']) && (mb_strlen($this->container['administrative_funding_control_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'administrative_funding_control_descriptor', the character length must be smaller than or equal to 306.";
        }

        if (!is_null($this->container['charter_approval_agency_type_descriptor']) && (mb_strlen($this->container['charter_approval_agency_type_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'charter_approval_agency_type_descriptor', the character length must be smaller than or equal to 306.";
        }

        if (!is_null($this->container['charter_status_descriptor']) && (mb_strlen($this->container['charter_status_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'charter_status_descriptor', the character length must be smaller than or equal to 306.";
        }

        if (!is_null($this->container['internet_access_descriptor']) && (mb_strlen($this->container['internet_access_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'internet_access_descriptor', the character length must be smaller than or equal to 306.";
        }

        if (!is_null($this->container['magnet_special_program_emphasis_school_descriptor']) && (mb_strlen($this->container['magnet_special_program_emphasis_school_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'magnet_special_program_emphasis_school_descriptor', the character length must be smaller than or equal to 306.";
        }

        if ($this->container['name_of_institution'] === null) {
            $invalidProperties[] = "'name_of_institution' can't be null";
        }
        if ((mb_strlen($this->container['name_of_institution']) > 75)) {
            $invalidProperties[] = "invalid value for 'name_of_institution', the character length must be smaller than or equal to 75.";
        }

        if (!is_null($this->container['operational_status_descriptor']) && (mb_strlen($this->container['operational_status_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'operational_status_descriptor', the character length must be smaller than or equal to 306.";
        }

        if (!is_null($this->container['school_type_descriptor']) && (mb_strlen($this->container['school_type_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'school_type_descriptor', the character length must be smaller than or equal to 306.";
        }

        if (!is_null($this->container['short_name_of_institution']) && (mb_strlen($this->container['short_name_of_institution']) > 75)) {
            $invalidProperties[] = "invalid value for 'short_name_of_institution', the character length must be smaller than or equal to 75.";
        }

        if (!is_null($this->container['title_i_part_a_school_designation_descriptor']) && (mb_strlen($this->container['title_i_part_a_school_designation_descriptor']) > 306)) {
            $invalidProperties[] = "invalid value for 'title_i_part_a_school_designation_descriptor', the character length must be smaller than or equal to 306.";
        }

        if (!is_null($this->container['web_site']) && (mb_strlen($this->container['web_site']) > 255)) {
            $invalidProperties[] = "invalid value for 'web_site', the character length must be smaller than or equal to 255.";
        }

        if (!is_null($this->container['web_site']) && (mb_strlen($this->container['web_site']) < 5)) {
            $invalidProperties[] = "invalid value for 'web_site', the character length must be bigger than or equal to 5.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id 
     *
     * @return self
     */
    public function setId($id)
    {
        if (is_null($id)) {
            throw new \InvalidArgumentException('non-nullable id cannot be null');
        }
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets education_organization_categories
     *
     * @return \Resources\Model\EdFiEducationOrganizationCategory[]
     */
    public function getEducationOrganizationCategories()
    {
        return $this->container['education_organization_categories'];
    }

    /**
     * Sets education_organization_categories
     *
     * @param \Resources\Model\EdFiEducationOrganizationCategory[] $education_organization_categories An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.
     *
     * @return self
     */
    public function setEducationOrganizationCategories($education_organization_categories)
    {
        if (is_null($education_organization_categories)) {
            throw new \InvalidArgumentException('non-nullable education_organization_categories cannot be null');
        }
        $this->container['education_organization_categories'] = $education_organization_categories;

        return $this;
    }

    /**
     * Gets grade_levels
     *
     * @return \Resources\Model\EdFiSchoolGradeLevel[]
     */
    public function getGradeLevels()
    {
        return $this->container['grade_levels'];
    }

    /**
     * Sets grade_levels
     *
     * @param \Resources\Model\EdFiSchoolGradeLevel[] $grade_levels An unordered collection of schoolGradeLevels. The grade levels served at the school.
     *
     * @return self
     */
    public function setGradeLevels($grade_levels)
    {
        if (is_null($grade_levels)) {
            throw new \InvalidArgumentException('non-nullable grade_levels cannot be null');
        }
        $this->container['grade_levels'] = $grade_levels;

        return $this;
    }

    /**
     * Gets school_id
     *
     * @return int
     */
    public function getSchoolId()
    {
        return $this->container['school_id'];
    }

    /**
     * Sets school_id
     *
     * @param int $school_id The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.
     *
     * @return self
     */
    public function setSchoolId($school_id)
    {
        if (is_null($school_id)) {
            throw new \InvalidArgumentException('non-nullable school_id cannot be null');
        }
        $this->container['school_id'] = $school_id;

        return $this;
    }

    /**
     * Gets charter_approval_school_year_type_reference
     *
     * @return \Resources\Model\EdFiSchoolYearTypeReference|null
     */
    public function getCharterApprovalSchoolYearTypeReference()
    {
        return $this->container['charter_approval_school_year_type_reference'];
    }

    /**
     * Sets charter_approval_school_year_type_reference
     *
     * @param \Resources\Model\EdFiSchoolYearTypeReference|null $charter_approval_school_year_type_reference charter_approval_school_year_type_reference
     *
     * @return self
     */
    public function setCharterApprovalSchoolYearTypeReference($charter_approval_school_year_type_reference)
    {
        if (is_null($charter_approval_school_year_type_reference)) {
            throw new \InvalidArgumentException('non-nullable charter_approval_school_year_type_reference cannot be null');
        }
        $this->container['charter_approval_school_year_type_reference'] = $charter_approval_school_year_type_reference;

        return $this;
    }

    /**
     * Gets local_education_agency_reference
     *
     * @return \Resources\Model\EdFiLocalEducationAgencyReference|null
     */
    public function getLocalEducationAgencyReference()
    {
        return $this->container['local_education_agency_reference'];
    }

    /**
     * Sets local_education_agency_reference
     *
     * @param \Resources\Model\EdFiLocalEducationAgencyReference|null $local_education_agency_reference local_education_agency_reference
     *
     * @return self
     */
    public function setLocalEducationAgencyReference($local_education_agency_reference)
    {
        if (is_null($local_education_agency_reference)) {
            throw new \InvalidArgumentException('non-nullable local_education_agency_reference cannot be null');
        }
        $this->container['local_education_agency_reference'] = $local_education_agency_reference;

        return $this;
    }

    /**
     * Gets addresses
     *
     * @return \Resources\Model\EdFiEducationOrganizationAddress[]|null
     */
    public function getAddresses()
    {
        return $this->container['addresses'];
    }

    /**
     * Sets addresses
     *
     * @param \Resources\Model\EdFiEducationOrganizationAddress[]|null $addresses An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.
     *
     * @return self
     */
    public function setAddresses($addresses)
    {
        if (is_null($addresses)) {
            throw new \InvalidArgumentException('non-nullable addresses cannot be null');
        }
        $this->container['addresses'] = $addresses;

        return $this;
    }

    /**
     * Gets administrative_funding_control_descriptor
     *
     * @return string|null
     */
    public function getAdministrativeFundingControlDescriptor()
    {
        return $this->container['administrative_funding_control_descriptor'];
    }

    /**
     * Sets administrative_funding_control_descriptor
     *
     * @param string|null $administrative_funding_control_descriptor The type of education institution as classified by its funding source, for example public or private.
     *
     * @return self
     */
    public function setAdministrativeFundingControlDescriptor($administrative_funding_control_descriptor)
    {
        if (is_null($administrative_funding_control_descriptor)) {
            array_push($this->openAPINullablesSetToNull, 'administrative_funding_control_descriptor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('administrative_funding_control_descriptor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($administrative_funding_control_descriptor) && (mb_strlen($administrative_funding_control_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $administrative_funding_control_descriptor when calling EdFiSchool., must be smaller than or equal to 306.');
        }

        $this->container['administrative_funding_control_descriptor'] = $administrative_funding_control_descriptor;

        return $this;
    }

    /**
     * Gets charter_approval_agency_type_descriptor
     *
     * @return string|null
     */
    public function getCharterApprovalAgencyTypeDescriptor()
    {
        return $this->container['charter_approval_agency_type_descriptor'];
    }

    /**
     * Sets charter_approval_agency_type_descriptor
     *
     * @param string|null $charter_approval_agency_type_descriptor The type of agency that approved the establishment or continuation of a charter school.
     *
     * @return self
     */
    public function setCharterApprovalAgencyTypeDescriptor($charter_approval_agency_type_descriptor)
    {
        if (is_null($charter_approval_agency_type_descriptor)) {
            array_push($this->openAPINullablesSetToNull, 'charter_approval_agency_type_descriptor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('charter_approval_agency_type_descriptor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($charter_approval_agency_type_descriptor) && (mb_strlen($charter_approval_agency_type_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $charter_approval_agency_type_descriptor when calling EdFiSchool., must be smaller than or equal to 306.');
        }

        $this->container['charter_approval_agency_type_descriptor'] = $charter_approval_agency_type_descriptor;

        return $this;
    }

    /**
     * Gets charter_status_descriptor
     *
     * @return string|null
     */
    public function getCharterStatusDescriptor()
    {
        return $this->container['charter_status_descriptor'];
    }

    /**
     * Sets charter_status_descriptor
     *
     * @param string|null $charter_status_descriptor A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.
     *
     * @return self
     */
    public function setCharterStatusDescriptor($charter_status_descriptor)
    {
        if (is_null($charter_status_descriptor)) {
            array_push($this->openAPINullablesSetToNull, 'charter_status_descriptor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('charter_status_descriptor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($charter_status_descriptor) && (mb_strlen($charter_status_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $charter_status_descriptor when calling EdFiSchool., must be smaller than or equal to 306.');
        }

        $this->container['charter_status_descriptor'] = $charter_status_descriptor;

        return $this;
    }

    /**
     * Gets identification_codes
     *
     * @return \Resources\Model\EdFiEducationOrganizationIdentificationCode[]|null
     */
    public function getIdentificationCodes()
    {
        return $this->container['identification_codes'];
    }

    /**
     * Sets identification_codes
     *
     * @param \Resources\Model\EdFiEducationOrganizationIdentificationCode[]|null $identification_codes An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.
     *
     * @return self
     */
    public function setIdentificationCodes($identification_codes)
    {
        if (is_null($identification_codes)) {
            throw new \InvalidArgumentException('non-nullable identification_codes cannot be null');
        }
        $this->container['identification_codes'] = $identification_codes;

        return $this;
    }

    /**
     * Gets indicators
     *
     * @return \Resources\Model\EdFiEducationOrganizationIndicator[]|null
     */
    public function getIndicators()
    {
        return $this->container['indicators'];
    }

    /**
     * Sets indicators
     *
     * @param \Resources\Model\EdFiEducationOrganizationIndicator[]|null $indicators An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization.
     *
     * @return self
     */
    public function setIndicators($indicators)
    {
        if (is_null($indicators)) {
            throw new \InvalidArgumentException('non-nullable indicators cannot be null');
        }
        $this->container['indicators'] = $indicators;

        return $this;
    }

    /**
     * Gets institution_telephones
     *
     * @return \Resources\Model\EdFiEducationOrganizationInstitutionTelephone[]|null
     */
    public function getInstitutionTelephones()
    {
        return $this->container['institution_telephones'];
    }

    /**
     * Sets institution_telephones
     *
     * @param \Resources\Model\EdFiEducationOrganizationInstitutionTelephone[]|null $institution_telephones An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity.
     *
     * @return self
     */
    public function setInstitutionTelephones($institution_telephones)
    {
        if (is_null($institution_telephones)) {
            throw new \InvalidArgumentException('non-nullable institution_telephones cannot be null');
        }
        $this->container['institution_telephones'] = $institution_telephones;

        return $this;
    }

    /**
     * Gets international_addresses
     *
     * @return \Resources\Model\EdFiEducationOrganizationInternationalAddress[]|null
     */
    public function getInternationalAddresses()
    {
        return $this->container['international_addresses'];
    }

    /**
     * Sets international_addresses
     *
     * @param \Resources\Model\EdFiEducationOrganizationInternationalAddress[]|null $international_addresses An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity.
     *
     * @return self
     */
    public function setInternationalAddresses($international_addresses)
    {
        if (is_null($international_addresses)) {
            throw new \InvalidArgumentException('non-nullable international_addresses cannot be null');
        }
        $this->container['international_addresses'] = $international_addresses;

        return $this;
    }

    /**
     * Gets internet_access_descriptor
     *
     * @return string|null
     */
    public function getInternetAccessDescriptor()
    {
        return $this->container['internet_access_descriptor'];
    }

    /**
     * Sets internet_access_descriptor
     *
     * @param string|null $internet_access_descriptor The type of Internet access available.
     *
     * @return self
     */
    public function setInternetAccessDescriptor($internet_access_descriptor)
    {
        if (is_null($internet_access_descriptor)) {
            array_push($this->openAPINullablesSetToNull, 'internet_access_descriptor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('internet_access_descriptor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($internet_access_descriptor) && (mb_strlen($internet_access_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $internet_access_descriptor when calling EdFiSchool., must be smaller than or equal to 306.');
        }

        $this->container['internet_access_descriptor'] = $internet_access_descriptor;

        return $this;
    }

    /**
     * Gets magnet_special_program_emphasis_school_descriptor
     *
     * @return string|null
     */
    public function getMagnetSpecialProgramEmphasisSchoolDescriptor()
    {
        return $this->container['magnet_special_program_emphasis_school_descriptor'];
    }

    /**
     * Sets magnet_special_program_emphasis_school_descriptor
     *
     * @param string|null $magnet_special_program_emphasis_school_descriptor A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).
     *
     * @return self
     */
    public function setMagnetSpecialProgramEmphasisSchoolDescriptor($magnet_special_program_emphasis_school_descriptor)
    {
        if (is_null($magnet_special_program_emphasis_school_descriptor)) {
            array_push($this->openAPINullablesSetToNull, 'magnet_special_program_emphasis_school_descriptor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('magnet_special_program_emphasis_school_descriptor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($magnet_special_program_emphasis_school_descriptor) && (mb_strlen($magnet_special_program_emphasis_school_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $magnet_special_program_emphasis_school_descriptor when calling EdFiSchool., must be smaller than or equal to 306.');
        }

        $this->container['magnet_special_program_emphasis_school_descriptor'] = $magnet_special_program_emphasis_school_descriptor;

        return $this;
    }

    /**
     * Gets name_of_institution
     *
     * @return string
     */
    public function getNameOfInstitution()
    {
        return $this->container['name_of_institution'];
    }

    /**
     * Sets name_of_institution
     *
     * @param string $name_of_institution The full, legally accepted name of the institution.
     *
     * @return self
     */
    public function setNameOfInstitution($name_of_institution)
    {
        if (is_null($name_of_institution)) {
            throw new \InvalidArgumentException('non-nullable name_of_institution cannot be null');
        }
        if ((mb_strlen($name_of_institution) > 75)) {
            throw new \InvalidArgumentException('invalid length for $name_of_institution when calling EdFiSchool., must be smaller than or equal to 75.');
        }

        $this->container['name_of_institution'] = $name_of_institution;

        return $this;
    }

    /**
     * Gets operational_status_descriptor
     *
     * @return string|null
     */
    public function getOperationalStatusDescriptor()
    {
        return $this->container['operational_status_descriptor'];
    }

    /**
     * Sets operational_status_descriptor
     *
     * @param string|null $operational_status_descriptor The current operational status of the education organization (e.g., active, inactive).
     *
     * @return self
     */
    public function setOperationalStatusDescriptor($operational_status_descriptor)
    {
        if (is_null($operational_status_descriptor)) {
            array_push($this->openAPINullablesSetToNull, 'operational_status_descriptor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('operational_status_descriptor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($operational_status_descriptor) && (mb_strlen($operational_status_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $operational_status_descriptor when calling EdFiSchool., must be smaller than or equal to 306.');
        }

        $this->container['operational_status_descriptor'] = $operational_status_descriptor;

        return $this;
    }

    /**
     * Gets school_categories
     *
     * @return \Resources\Model\EdFiSchoolCategory[]|null
     */
    public function getSchoolCategories()
    {
        return $this->container['school_categories'];
    }

    /**
     * Sets school_categories
     *
     * @param \Resources\Model\EdFiSchoolCategory[]|null $school_categories An unordered collection of schoolCategories. The one or more categories of school.
     *
     * @return self
     */
    public function setSchoolCategories($school_categories)
    {
        if (is_null($school_categories)) {
            throw new \InvalidArgumentException('non-nullable school_categories cannot be null');
        }
        $this->container['school_categories'] = $school_categories;

        return $this;
    }

    /**
     * Gets school_type_descriptor
     *
     * @return string|null
     */
    public function getSchoolTypeDescriptor()
    {
        return $this->container['school_type_descriptor'];
    }

    /**
     * Sets school_type_descriptor
     *
     * @param string|null $school_type_descriptor The type of education institution as classified by its primary focus.
     *
     * @return self
     */
    public function setSchoolTypeDescriptor($school_type_descriptor)
    {
        if (is_null($school_type_descriptor)) {
            array_push($this->openAPINullablesSetToNull, 'school_type_descriptor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('school_type_descriptor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($school_type_descriptor) && (mb_strlen($school_type_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $school_type_descriptor when calling EdFiSchool., must be smaller than or equal to 306.');
        }

        $this->container['school_type_descriptor'] = $school_type_descriptor;

        return $this;
    }

    /**
     * Gets short_name_of_institution
     *
     * @return string|null
     */
    public function getShortNameOfInstitution()
    {
        return $this->container['short_name_of_institution'];
    }

    /**
     * Sets short_name_of_institution
     *
     * @param string|null $short_name_of_institution A short name for the institution.
     *
     * @return self
     */
    public function setShortNameOfInstitution($short_name_of_institution)
    {
        if (is_null($short_name_of_institution)) {
            array_push($this->openAPINullablesSetToNull, 'short_name_of_institution');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('short_name_of_institution', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($short_name_of_institution) && (mb_strlen($short_name_of_institution) > 75)) {
            throw new \InvalidArgumentException('invalid length for $short_name_of_institution when calling EdFiSchool., must be smaller than or equal to 75.');
        }

        $this->container['short_name_of_institution'] = $short_name_of_institution;

        return $this;
    }

    /**
     * Gets title_i_part_a_school_designation_descriptor
     *
     * @return string|null
     */
    public function getTitleIPartASchoolDesignationDescriptor()
    {
        return $this->container['title_i_part_a_school_designation_descriptor'];
    }

    /**
     * Sets title_i_part_a_school_designation_descriptor
     *
     * @param string|null $title_i_part_a_school_designation_descriptor Denotes the Title I Part A designation for the school.
     *
     * @return self
     */
    public function setTitleIPartASchoolDesignationDescriptor($title_i_part_a_school_designation_descriptor)
    {
        if (is_null($title_i_part_a_school_designation_descriptor)) {
            array_push($this->openAPINullablesSetToNull, 'title_i_part_a_school_designation_descriptor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('title_i_part_a_school_designation_descriptor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($title_i_part_a_school_designation_descriptor) && (mb_strlen($title_i_part_a_school_designation_descriptor) > 306)) {
            throw new \InvalidArgumentException('invalid length for $title_i_part_a_school_designation_descriptor when calling EdFiSchool., must be smaller than or equal to 306.');
        }

        $this->container['title_i_part_a_school_designation_descriptor'] = $title_i_part_a_school_designation_descriptor;

        return $this;
    }

    /**
     * Gets web_site
     *
     * @return string|null
     */
    public function getWebSite()
    {
        return $this->container['web_site'];
    }

    /**
     * Sets web_site
     *
     * @param string|null $web_site The public web site address (URL) for the education organization.
     *
     * @return self
     */
    public function setWebSite($web_site)
    {
        if (is_null($web_site)) {
            array_push($this->openAPINullablesSetToNull, 'web_site');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('web_site', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        if (!is_null($web_site) && (mb_strlen($web_site) > 255)) {
            throw new \InvalidArgumentException('invalid length for $web_site when calling EdFiSchool., must be smaller than or equal to 255.');
        }
        if (!is_null($web_site) && (mb_strlen($web_site) < 5)) {
            throw new \InvalidArgumentException('invalid length for $web_site when calling EdFiSchool., must be bigger than or equal to 5.');
        }

        $this->container['web_site'] = $web_site;

        return $this;
    }

    /**
     * Gets _etag
     *
     * @return string|null
     */
    public function getEtag()
    {
        return $this->container['_etag'];
    }

    /**
     * Sets _etag
     *
     * @param string|null $_etag A unique system-generated value that identifies the version of the resource.
     *
     * @return self
     */
    public function setEtag($_etag)
    {
        if (is_null($_etag)) {
            throw new \InvalidArgumentException('non-nullable _etag cannot be null');
        }
        $this->container['_etag'] = $_etag;

        return $this;
    }

    /**
     * Gets _last_modified_date
     *
     * @return \DateTime|null
     */
    public function getLastModifiedDate()
    {
        return $this->container['_last_modified_date'];
    }

    /**
     * Sets _last_modified_date
     *
     * @param \DateTime|null $_last_modified_date The date and time the resource was last modified.
     *
     * @return self
     */
    public function setLastModifiedDate($_last_modified_date)
    {
        if (is_null($_last_modified_date)) {
            throw new \InvalidArgumentException('non-nullable _last_modified_date cannot be null');
        }
        $this->container['_last_modified_date'] = $_last_modified_date;

        return $this;
    }

    /**
     * Gets _ext
     *
     * @return \Resources\Model\SchoolExtensions|null
     */
    public function getExt()
    {
        return $this->container['_ext'];
    }

    /**
     * Sets _ext
     *
     * @param \Resources\Model\SchoolExtensions|null $_ext _ext
     *
     * @return self
     */
    public function setExt($_ext)
    {
        if (is_null($_ext)) {
            throw new \InvalidArgumentException('non-nullable _ext cannot be null');
        }
        $this->container['_ext'] = $_ext;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


